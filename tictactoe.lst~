tictactoe                                                                                                               PAGE 1
                         1     ;-------------------------------------------------
                         2     ;TicTacToe, 2 Spieler
                         3     ; Eingabe: Matrix-Keypad an P0 (P0.0-P0.3, für 9 Felder), Eingabe bestätigen P0.7 ; Wertebereich: [1-
                         4     ; Ausgabe: 8x8-LED-Matrix an P1, P2
                         5     ;
                         6     ; -------------------------------------------------
                         7     ;-----------------------------------------------------------------------
                         8     ; Voreingestellungen
                         9     ;-----------------------------------------------------------------------
                        10     ORG 0H   ; Startadresse des Programms
0000 759000             11     MOV P1, #00H  ; Konfiguriere Port 1 als Ausgangsport für LED-Matrix
0003 75A000             12     MOV P2, #00H  ; Konfiguriere Port 2 als Ausgangsport für LED-Matrix
                        13
                        14     ;-----------------------------------------------------------------------
                        15     ; Logik
                        16     ;-----------------------------------------------------------------------
                        17
0006 120009             18     call INIT_BOARD
                        19     INIT_BOARD:
0009 759002             20             MOV P1, #010b ; Anzahl der Zeilen im Spielfeld
000C 75A002             21             MOV P2, #010b ; Adresse des Spielfelds im Speicher
000F 7F00               22             mov r7, #00000000b      ;00 0 00 0 10
                        23                                     ;00 0 00 0 10           wenn x < 3 -> R7
                        24                                     ;00 0 00 0 00
0011 7E00               25             mov r6, #00000000b      ;11 0 10 0 00
                        26                                     ;11 0 10 0 00           wenn x < 6 -> R6
                        27                                     ;00 0 00 0 00
0013 7D00               28             mov r5, #00000000b      ;11 0 00 0 00
                        29                                     ;11 0 00 0 00           sonst R5
                        30
                        31
0015 120018             32     call MAIN_LOOP
                        33     MAIN_LOOP:
                        34             ;-----------------------------------------------------------------------
                        35                 ; ON_INPUT: Wird P0.7 betätigt, so wird Port P0 (P0.0-P0.3) eingelesen -> liefert Dezimal
                        36             ;-----------------------------------------------------------------------
0018 208705             37             JB P0.7, ON_INPUT
                        38
                        39
001B 120079             40             call DISPLAY_BOARD
001E 80F8               41             JMP MAIN_LOOP
                        42
                        43
                        44     ON_INPUT:
0020 E580               45             MOV a, P0
0022 540F               46             ANL a, #00FH ; bitweise &-Verknüpfung, um nur die letzten 4 Bits (P0.0-P0.3) auszuwerten
0024 F8                 47             MOV R0, a
                        48             ;-----------------------------------------------------------------------
                        49                 ; Mappe Feld auf 8x8 Matrix
                        50                 ; => R0 enthält den Wert des zu setztenden Feldes
                        51             ;-----------------------------------------------------------------------
                        52             ; x < 3
0025 9403               53             SUBB A, #03h; Idee: 1-2 = -1 > -2 <=>  a<b
0027 400E               54             JC LESS_THAN_3 ; x<3 -> schreibe in R7
0029 600C               55             JZ LESS_THAN_3
                        56
                        57             ; 3 < x < 6
002B 9403               58             SUBB A, #03h
002D 401E               59             JC LESS_THAN_6 ; x<6 -> schreibe in R6
002F 601C               60             JZ LESS_THAN_6
                        61             ; 6< x < 9
0031 9403               62             SUBB A, #03h
0033 402E               63             JC LESS_THAN_9 ; x<6 -> schreibe in R6
0035 602C               64             JZ LESS_THAN_9
                        65
                        66             ; x < 3
                        67             LESS_THAN_3:
0037 FA                 68                     MOV R2, A; register für zähler der foor loop
0038 7403               69                     MOV A, #00000011b
003A CA                 70                     xch A,R2                ; dopppelte Vertauschung notwendig!!
003B 10D705             71                     JBC C,SUM_LOOP_3
                        72
                        73                     JoaNhBinZuUnkreativ1:
003E CA                 74                             xch A,R2                ;tausche A mit R2
003F 4F                 75                             ORL A, R7               ;schreibe wert in TicTacToeFeld mit |-Verknüpfung
0040 FF                 76                             MOV R7, A               ;speichere Wert in Register zwischen
0041 80D5               77                             JMP MAIN_LOOP
                        78
                        79             SUM_LOOP_3:
0043 CA                 80                     xch A,R2
0044 0A                 81                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
0045 23                 82                     RL A            ;rotiere akku um 3 Stellen je übertrag
0046 23                 83                     RL A
0047 23                 84                     RL A
0048 CA                 85                     xch A,R2                ;tausche A(kku) mit R2
0049 70F8               86                     JNZ SUM_LOOP_3          ; springe zurück zur Schleife, wenn r2 != 0
004B 60F1               87                     JZ JoaNhBinZuUnkreativ1
                        88
                        89             ;-----------------------------------------------------------------------
                        90             ; 3 < x < 6
                        91             LESS_THAN_6:
004D FA                 92                     MOV R2, A; register für zähler der foor loop
004E 7403               93                     MOV A, #00000011b
0050 CA                 94                     xch A,R2                ; dopppelte Vertauschung notwendig!!
0051 10D705             95                     JBC C,SUM_LOOP_6
                        96
                        97                     JoaNhBinZuUnkreativ2:
0054 CA                 98                             xch A,R2                ;tausche A mit R2
0055 4E                 99                             ORL A, R6               ;schreibe wert in TicTacToeFeld mit |-Verknüpfung
0056 FE                100                             MOV R6, A               ;speichere Wert in Register zwischen
0057 80BF              101                             JMP MAIN_LOOP
                       102
                       103             SUM_LOOP_6:
0059 CA                104                     xch A,R2
005A 0A                105                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
005B 23                106                     RL A            ;rotiere akku um 3 Stellen je übertrag
005C 23                107                     RL A
005D 23                108                     RL A
005E CA                109                     xch A,R2                ;tausche A(kku) mit R2
005F 70F8              110                     JNZ SUM_LOOP_6          ; springe zurück zur Schleife, wenn r2 != 0
0061 60F1              111                     JZ JoaNhBinZuUnkreativ2
                       112
                       113
                       114
                       115             ;-----------------------------------------------------------------------
                       116             ; 6< x < 9
                       117             LESS_THAN_9:
0063 FA                118                     MOV R2, A; register für zähler der foor loop
0064 7403              119                     MOV A, #00000011b
0066 CA                120                     xch A,R2                ; dopppelte Vertauschung notwendig!!
0067 10D705            121                     JBC C,SUM_LOOP_9
                       122
                       123                     JoaNhBinZuUnkreativ3:
006A CA                124                             xch A,R2                ;tausche A mit R2
006B 4D                125                             ORL A, R5               ;schreibe wert in TicTacToeFeld mit |-Verknüpfung
006C FD                126                             MOV R5, A               ;speichere Wert in Register zwischen
006D 80A9              127                             JMP MAIN_LOOP
                       128
                       129             SUM_LOOP_9:
006F CA                130                     xch A,R2
0070 0A                131                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
0071 23                132                     RL A            ;rotiere akku um 3 Stellen je übertrag
0072 23                133                     RL A
0073 23                134                     RL A
0074 CA                135                     xch A,R2                ;tausche A(kku) mit R2
0075 70F8              136                     JNZ SUM_LOOP_9          ; springe zurück zur Schleife, wenn r2 != 0
0077 60F1              137                     JZ JoaNhBinZuUnkreativ3
                       138
                       139
                       140
                       141
                       142
                       143     DISPLAY_BOARD:
                       144             ;-----------------------------------------------------------------------
                       145                 ; Zeige R7,R6,R5 nacheinander gemultiplext an
                       146                 ; R7, R6, R5 spiegeln das Feld wider, x die Eingabe aus R0 von Funktion ON_INPUT (Wird au
                       147             ;-----------------------------------------------------------------------
                       148
                       149
                       150
0079 759000            151             MOV P1, #00000000b ;setze p1 standardgemäß auf 0
                       152             ;display0:
007C 8FA0              153                     MOV P2, R7
007E D290              154                     setb P1.0
0080 109000            155                     JBC P1.0,display1
                       156             display1:
                       157                     ;MOV P2, R7
0083 D291              158                     setb P1.1
0085 109100            159                     JBC P1.1,display2
                       160             display2:
0088 75A000            161                     MOV P2, #00000000b
008B D292              162                     setb P1.2
008D 109200            163                     JBC P1.2,display3
0090 8EA0              164             display3: MOV P2, R6
0092 D293              165                     setb P1.3
0094 109300            166                     JBC P1.3,display4
                       167             display4:
0097 D294              168                     setb P1.4
0099 109400            169                     JBC P1.4,display5
                       170             display5:
009C 75A000            171                     MOV P2, #00000000b
009F D295              172                     setb P1.5
00A1 109500            173                     JBC P1.5,display6
                       174             display6:
00A4 8DA0              175                     MOV P2, R5
00A6 D296              176                     setb P1.6
00A8 109600            177                     JBC P1.6,display7
                       178             display7:
00AB D297              179                     setb P1.7
                       180                     ;MOV P1, #00000000b ;setze p1 standardgemäß auf 0
00AD 1118              181                     call main_loop
                       182
                       183
                       184
                       185     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H  NOT USED
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DISPLAY1 . . . . . . . . . . . . . .  C  ADDR  0083H
DISPLAY2 . . . . . . . . . . . . . .  C  ADDR  0088H
DISPLAY3 . . . . . . . . . . . . . .  C  ADDR  0090H
DISPLAY4 . . . . . . . . . . . . . .  C  ADDR  0097H
DISPLAY5 . . . . . . . . . . . . . .  C  ADDR  009CH
DISPLAY6 . . . . . . . . . . . . . .  C  ADDR  00A4H
DISPLAY7 . . . . . . . . . . . . . .  C  ADDR  00ABH
DISPLAY_BOARD. . . . . . . . . . . .  C  ADDR  0079H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH  NOT USED
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H  NOT USED
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT_BOARD . . . . . . . . . . . . .  C  ADDR  0009H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
JOANHBINZUUNKREATIV1 . . . . . . . .  C  ADDR  003EH
JOANHBINZUUNKREATIV2 . . . . . . . .  C  ADDR  0054H
JOANHBINZUUNKREATIV3 . . . . . . . .  C  ADDR  006AH
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LESS_THAN_3. . . . . . . . . . . . .  C  ADDR  0037H
LESS_THAN_6. . . . . . . . . . . . .  C  ADDR  004DH
LESS_THAN_9. . . . . . . . . . . . .  C  ADDR  0063H
MAIN_LOOP. . . . . . . . . . . . . .  C  ADDR  0018H
ON_INPUT . . . . . . . . . . . . . .  C  ADDR  0020H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
SUM_LOOP_3 . . . . . . . . . . . . .  C  ADDR  0043H
SUM_LOOP_6 . . . . . . . . . . . . .  C  ADDR  0059H
SUM_LOOP_9 . . . . . . . . . . . . .  C  ADDR  006FH
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED