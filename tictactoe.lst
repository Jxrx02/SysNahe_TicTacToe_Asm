tictactoe                                                                                                               PAGE 1
                         1     ;-------------------------------------------------
                         2     ;TicTacToe, 2 Spieler
                         3     ; Eingabe: Matrix-Keypad an P0 (P0.0-P0.3, für 9 Felder), Eingabe bestätigen P3.2 ; Wertebereich: [1-
                         4     ; Ausgabe: 8x8-LED-Matrix an P1, P2
                         5     ;
                         6     ; -------------------------------------------------
                         7
                         8
                         9     ;-----------------------------------------------------------------------
                        10     ; Voreingestellungen
                        11     ;-----------------------------------------------------------------------
                        12     ORG 0H   ; Startadresse des Programms
0000 020006             13     LJMP INIT_BOARD
                        14     ;-----------------------------------------------------------------------
                        15     ;ISR  <--- IRGENDETWAS LÄUFT HIER NOCH SCHIEF -> Bei Lausen Nachfragen
                        16     ;-----------------------------------------------------------------------
                        17     ORG 03H ; 03H ist die eigentliche adresse von interrupt 3.2, aber führt zu fehler
0003 020020             18     LJMP ON_INPUT
                        19     ;reti ; return from interupt; remove interrupt-bit
                        20
                        21
                        22     ;-----------------------------------------------------------------------
                        23     ; Logik
                        24     ;-----------------------------------------------------------------------
                        25     INIT_BOARD:
                        26             ;Bits für Interrupt
                        27             ;SETB IT0       ; Externer Interrupt reagiert auf fallende Flanke an P3.2; -> ist für richtig
0006 C288               28             CLR IT0         ; Externer Interrupt reagiert auf gedrückten Schalter P3.2
0008 D2A8               29             SETB EX0        ; Externen Interrupt aktivieren
000A D2AF               30             SETB EA         ; Interrupts generell zulassen
                        31              ; --- ab hier reagiert der µC auf den externen Interrupt 0
000C 7F00               32             mov r7, #00000000b      ;00 0 00 0 10
                        33                                     ;00 0 00 0 10           wenn x < 3 -> R7
                        34                                     ;00 0 00 0 00
000E 7E00               35             mov r6, #00000000b      ;11 0 10 0 00
                        36                                     ;11 0 10 0 00           wenn x < 6 -> R6
                        37                                     ;00 0 00 0 00
0010 7D00               38             mov r5, #00000000b      ;11 0 00 0 00
                        39                                     ;11 0 00 0 00           sonst R5
                        40
0012 759000             41             MOV P1, #00H    ; Konfiguriere Port 1 als Ausgangsport für LED-Matrix; Befehl nicht notwendig
0015 75A000             42             MOV P2, #00H    ; Konfiguriere Port 2 als Ausgangsport für LED-Matrix; Befehl nicht notwendig
                        43
0018 02001B             44             LJMP MAIN_LOOP
                        45
                        46
                        47     MAIN_LOOP:
                        48             ;-----------------------------------------------------------------------
                        49                 ; ON_INPUT: Wird P3.2 betätigt, so wird Port P0 (P0.0-P0.3) eingelesen -> liefert Dezimal
                        50             ;-----------------------------------------------------------------------
                        51             ;JB P0.7, ON_INPUT
                        52
001B 0200A0             53             LJMP DISPLAY_BOARD
                        54
001E 80FB               55             JMP MAIN_LOOP
                        56
                        57
                        58     ON_INPUT:
0020 E580               59             MOV a, P0
0022 540F               60             ANL a, #00FH ; bitweise &-Verknüpfung, um nur die letzten 4 Bits (P0.0-P0.3) auszuwerten
0024 F8                 61             MOV R0, a
                        62             ;-----------------------------------------------------------------------
                        63                 ; Mappe Feld auf 8x8 Matrix
                        64                 ; => R0 enthält den Wert des zu setztenden Feldes
                        65             ;-----------------------------------------------------------------------
                        66             ; x < 3
0025 9403               67             SUBB A, #03h; Idee: 8-3 >0; 5-3>0; 2-3 = -1 Setze Carry oder wenn akku leer, springe auf schl
0027 400E               68             JC LESS_THAN_3 ; x<3 -> schreibe in R7
0029 600C               69             JZ LESS_THAN_3
                        70
                        71             ; 3 < x < 6
002B 9403               72             SUBB A, #03h
002D 4023               73             JC LESS_THAN_6 ; x<6 -> schreibe in R6
002F 6021               74             JZ LESS_THAN_6
                        75             ; 6< x < 9
0031 9403               76             SUBB A, #03h
0033 4038               77             JC LESS_THAN_9 ; x<6 -> schreibe in R6
0035 6036               78             JZ LESS_THAN_9
                        79
                        80             ; x < 3
                        81             LESS_THAN_3:
0037 FA                 82                     MOV R2, A; register für zähler der foor loop
                        83                     ; wenn Bit P3.7 gesetzt ist, so schreibe #00000001b (Spieler 2), ansonsten #00000011b
0038 20B751             84                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD
003B 30B74A             85                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD
                        86                     NACH_REGISTER_FÜLLEN1:
003E B2B7               87                     CPL P3.7
0040 CA                 88                     xch A,R2                ; dopppelte Vertauschung notwendig!!
0041 10D704             89                     JBC CY,SUM_LOOP_3
                        90
                        91                     JoaNhBinZuUnkreativ1:
0044 CA                 92                             xch A,R2                ;tausche A mit R2
0045 6F                 93                             XRL A, R7               ;schreibe wert in TicTacToeFeld mit exclusiv-oder-Ver
0046 FF                 94                             MOV R7, A               ;speichere Wert in Register zwischen
                        95                             ;JMP MAIN_LOOP
0047 32                 96                             RETI                    ;RET, wenn Interrupt verwendet wird
                        97
                        98             SUM_LOOP_3:
0048 CA                 99                     xch A,R2
0049 0A                100                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
004A 23                101                     RL A            ;rotiere akku um 3 Stellen je übertrag
004B 23                102                     RL A
004C 23                103                     RL A
004D CA                104                     xch A,R2                ;tausche A(kku) mit R2
004E 70F8              105                     JNZ SUM_LOOP_3          ; springe zurück zur Schleife, wenn r2 != 0
0050 60F2              106                     JZ JoaNhBinZuUnkreativ1
                       107
                       108             ;-----------------------------------------------------------------------
                       109             ; 3 < x < 6
                       110             LESS_THAN_6:
0052 FA                111                     MOV R2, A
0053 20B73E            112                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD2
0056 30B737            113                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD2
                       114                     NACH_REGISTER_FÜLLEN2:
0059 B2B7              115                     CPL P3.7
005B CA                116                     xch A,R2
005C 10D704            117                     JBC CY,SUM_LOOP_6
                       118
                       119                     JoaNhBinZuUnkreativ2:
005F CA                120                             xch A,R2
0060 6E                121                             XRL A, R6
0061 FE                122                             MOV R6, A
                       123                             ;JMP MAIN_LOOP
0062 32                124                             RETI            ;RET, wenn Interrupt verwendet wird
                       125
                       126             SUM_LOOP_6:
0063 CA                127                     xch A,R2
0064 0A                128                     INC R2
0065 23                129                     RL A
0066 23                130                     RL A
0067 23                131                     RL A
0068 CA                132                     xch A,R2
0069 70F8              133                     JNZ SUM_LOOP_6
006B 60F2              134                     JZ JoaNhBinZuUnkreativ2
                       135
                       136
                       137
                       138             ;-----------------------------------------------------------------------
                       139             ; 6< x < 9
                       140             LESS_THAN_9:
006D FA                141                     MOV R2, A
006E 20B72B            142                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD3
0071 30B724            143                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD3
                       144                     NACH_REGISTER_FÜLLEN3:
0074 B2B7              145                     CPL P3.7
0076 CA                146                     xch A,R2
0077 10D704            147                     JBC CY,SUM_LOOP_9
                       148
                       149                     JoaNhBinZuUnkreativ3:
007A CA                150                             xch A,R2
007B 6D                151                             XRL A, R5
007C FD                152                             MOV R5, A
                       153                             ;JMP MAIN_LOOP
007D 32                154                             RETI
                       155
                       156             SUM_LOOP_9:
007E CA                157                     xch A,R2
007F 0A                158                     INC R2
0080 23                159                     RL A
0081 23                160                     RL A
0082 23                161                     RL A
0083 CA                162                     xch A,R2
0084 70F8              163                     JNZ SUM_LOOP_9
0086 60F2              164                     JZ JoaNhBinZuUnkreativ3
                       165
                       166     ; Das hier ist bisschen unschön, aber es muss zu der jeweiligen Adresse im 'IF' zurückgesprungen werd
                       167     WRITE_PLAYER_1_INTO_FIELD:
0088 7403              168             MOV A, #00000011b
008A 80B2              169             JMP NACH_REGISTER_FÜLLEN1
                       170     WRITE_PLAYER_2_INTO_FIELD:
008C 7401              171             MOV A, #00000001b
008E 80AE              172             JMP NACH_REGISTER_FÜLLEN1
                       173
                       174     WRITE_PLAYER_1_INTO_FIELD2:
0090 7403              175             MOV A, #00000011b
0092 80C5              176             JMP NACH_REGISTER_FÜLLEN2
                       177     WRITE_PLAYER_2_INTO_FIELD2:
0094 7401              178             MOV A, #00000001b
0096 80C1              179             JMP NACH_REGISTER_FÜLLEN2
                       180
                       181     WRITE_PLAYER_1_INTO_FIELD3:
0098 7403              182             MOV A, #00000011b
009A 80D8              183             JMP NACH_REGISTER_FÜLLEN3
                       184     WRITE_PLAYER_2_INTO_FIELD3:
009C 7401              185             MOV A, #00000001b
009E 80D4              186             JMP NACH_REGISTER_FÜLLEN3
                       187
                       188
                       189
                       190     DISPLAY_BOARD:
                       191             ;-----------------------------------------------------------------------
                       192                 ; Zeige R7,R6,R5 nacheinander gemultiplext an
                       193                 ; R7, R6, R5 spiegeln das Feld wider, x die Eingabe aus R0 von Funktion ON_INPUT (Wird au
                       194             ;-----------------------------------------------------------------------
                       195
                       196
                       197
00A0 759000            198             MOV P1, #00000000b ;setze p1 standardgemäß auf 0
                       199             ;display0:
00A3 8FA0              200                     MOV P2, R7
00A5 D290              201                     setb P1.0
00A7 109000            202                     JBC P1.0,display1
                       203             display1:
                       204                     ;MOV P2, R7
00AA D291              205                     setb P1.1
00AC 109100            206                     JBC P1.1,display2
                       207             display2:
                       208                     ;MOV P2, #00000000b
00AF D292              209                     setb P1.2
00B1 109200            210                     JBC P1.2,display3
00B4 8EA0              211             display3: MOV P2, R6
00B6 D293              212                     setb P1.3
00B8 109300            213                     JBC P1.3,display4
                       214             display4:
00BB D294              215                     setb P1.4
00BD 109400            216                     JBC P1.4,display5
                       217             display5:
                       218                     ;MOV P2, #00000000b
00C0 D295              219                     setb P1.5
00C2 109500            220                     JBC P1.5,display6
                       221             display6:
00C5 8DA0              222                     MOV P2, R5
00C7 D296              223                     setb P1.6
00C9 109600            224                     JBC P1.6,display7
                       225             display7:
00CC D297              226                     setb P1.7
                       227
                       228
00CE 02001B            229                     LJMP main_loop
                       230
                       231
                       232
                       233
                       234     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H  NOT USED
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H
DISPLAY1 . . . . . . . . . . . . . .  C  ADDR  00AAH
DISPLAY2 . . . . . . . . . . . . . .  C  ADDR  00AFH
DISPLAY3 . . . . . . . . . . . . . .  C  ADDR  00B4H
DISPLAY4 . . . . . . . . . . . . . .  C  ADDR  00BBH
DISPLAY5 . . . . . . . . . . . . . .  C  ADDR  00C0H
DISPLAY6 . . . . . . . . . . . . . .  C  ADDR  00C5H
DISPLAY7 . . . . . . . . . . . . . .  C  ADDR  00CCH
DISPLAY_BOARD. . . . . . . . . . . .  C  ADDR  00A0H
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT_BOARD . . . . . . . . . . . . .  C  ADDR  0006H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
JOANHBINZUUNKREATIV1 . . . . . . . .  C  ADDR  0044H
JOANHBINZUUNKREATIV2 . . . . . . . .  C  ADDR  005FH
JOANHBINZUUNKREATIV3 . . . . . . . .  C  ADDR  007AH
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LESS_THAN_3. . . . . . . . . . . . .  C  ADDR  0037H
LESS_THAN_6. . . . . . . . . . . . .  C  ADDR  0052H
LESS_THAN_9. . . . . . . . . . . . .  C  ADDR  006DH
MAIN_LOOP. . . . . . . . . . . . . .  C  ADDR  001BH
NACH_REGISTER_FÜLLEN1. . . . . . . .  C  ADDR  003EH
NACH_REGISTER_FÜLLEN2. . . . . . . .  C  ADDR  0059H
NACH_REGISTER_FÜLLEN3. . . . . . . .  C  ADDR  0074H
ON_INPUT . . . . . . . . . . . . . .  C  ADDR  0020H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
SUM_LOOP_3 . . . . . . . . . . . . .  C  ADDR  0048H
SUM_LOOP_6 . . . . . . . . . . . . .  C  ADDR  0063H
SUM_LOOP_9 . . . . . . . . . . . . .  C  ADDR  007EH
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED
WRITE_PLAYER_1_INTO_FIELD. . . . . .  C  ADDR  0088H
WRITE_PLAYER_1_INTO_FIELD2 . . . . .  C  ADDR  0090H
WRITE_PLAYER_1_INTO_FIELD3 . . . . .  C  ADDR  0098H
WRITE_PLAYER_2_INTO_FIELD. . . . . .  C  ADDR  008CH
WRITE_PLAYER_2_INTO_FIELD2 . . . . .  C  ADDR  0094H
WRITE_PLAYER_2_INTO_FIELD3 . . . . .  C  ADDR  009CH