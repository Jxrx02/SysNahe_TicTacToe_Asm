tictactoe                                                                                                               PAGE 1
                         1     ;-------------------------------------------------
                         2     ;TicTacToe, 2 Spieler
                         3     ; Eingabe: Matrix-Keypad an P0 (P0.0-P0.3, für 9 Felder), Eingabe bestätigen P0.7 ; Wertebereich: [1-
                         4     ; Ausgabe: 8x8-LED-Matrix an P1, P2
                         5     ;
                         6     ; -------------------------------------------------
                         7
                         8
                         9     ;-----------------------------------------------------------------------
                        10     ; Voreingestellungen
                        11     ;-----------------------------------------------------------------------
                        12     ORG 0H   ; Startadresse des Programms
0000 759000             13     MOV P1, #00H    ; Konfiguriere Port 1 als Ausgangsport für LED-Matrix
0003 75A000             14     MOV P2, #00H    ; Konfiguriere Port 2 als Ausgangsport für LED-Matrix
                        15
0006 020017             16     LJMP INIT_BOARD
0009 020023             17     LJMP MAIN_LOOP
                        18     ;-----------------------------------------------------------------------
                        19     ;ISR  <--- IRGENDETWAS LÄUFT HIER NOCH SCHIEF -> Bei Lausen Nachfragen
                        20     ;-----------------------------------------------------------------------
                        21     ORG 13H ; adresse von interrupt 3.2
0013 12002B             22     call ON_INPUT
0016 32                 23     reti ; return from interupt; remove interrupt-bit
                        24
                        25
                        26
                        27     ;-----------------------------------------------------------------------
                        28     ; Logik
                        29     ;-----------------------------------------------------------------------
                        30
                        31
                        32
                        33     INIT_BOARD:
                        34             ;Bits für Interrupt
0017 D288               35             SETB IT0  ; Externer Interrupt reagiert auf fallende Flanke an P3.2
0019 D2A8               36             SETB EX0  ; Externen Interrupt aktivieren
001B D2AF               37             SETB EA   ; Interrupts generell zulassen
                        38              ; --- ab hier reagiert der µC auf den externen Interrupt 0
001D 7F00               39             mov r7, #00000000b      ;00 0 00 0 10
                        40                                     ;00 0 00 0 10           wenn x < 3 -> R7
                        41                                     ;00 0 00 0 00
001F 7E00               42             mov r6, #00000000b      ;11 0 10 0 00
                        43                                     ;11 0 10 0 00           wenn x < 6 -> R6
                        44                                     ;00 0 00 0 00
0021 7D00               45             mov r5, #00000000b      ;11 0 00 0 00
                        46                                     ;11 0 00 0 00           sonst R5
                        47
                        48
                        49
                        50     MAIN_LOOP:
                        51             ;-----------------------------------------------------------------------
                        52                 ; ON_INPUT: Wird P0.7 betätigt, so wird Port P0 (P0.0-P0.3) eingelesen -> liefert Dezimal
                        53             ;-----------------------------------------------------------------------
0023 208705             54             JB P0.7, ON_INPUT
                        55
0026 0200AE             56             LJMP DISPLAY_BOARD
                        57
0029 80F8               58             JMP MAIN_LOOP
                        59
                        60
                        61     ON_INPUT:
                        62             ;CPL P0.7
002B E580               63             MOV a, P0
002D 540F               64             ANL a, #00FH ; bitweise &-Verknüpfung, um nur die letzten 4 Bits (P0.0-P0.3) auszuwerten
002F F8                 65             MOV R0, a
                        66             ;-----------------------------------------------------------------------
                        67                 ; Mappe Feld auf 8x8 Matrix
                        68                 ; => R0 enthält den Wert des zu setztenden Feldes
                        69             ;-----------------------------------------------------------------------
                        70             ; x < 3
0030 9403               71             SUBB A, #03h; Idee: 8-3 >0; 5-3>0; 2-3 = -1 Setze Carry oder wenn akku leer, springe auf schl
0032 400E               72             JC LESS_THAN_3 ; x<3 -> schreibe in R7
0034 600C               73             JZ LESS_THAN_3
                        74
                        75             ; 3 < x < 6
0036 9403               76             SUBB A, #03h
0038 4024               77             JC LESS_THAN_6 ; x<6 -> schreibe in R6
003A 6022               78             JZ LESS_THAN_6
                        79             ; 6< x < 9
003C 9403               80             SUBB A, #03h
003E 403A               81             JC LESS_THAN_9 ; x<6 -> schreibe in R6
0040 6038               82             JZ LESS_THAN_9
                        83
                        84             ; x < 3
                        85             LESS_THAN_3:
0042 FA                 86                     MOV R2, A; register für zähler der foor loop
                        87                     ; wenn Bit P3.7 gesetzt ist, so schreibe #00000001b (Spieler 2), ansonsten #00000011b
0043 20B754             88                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD
0046 30B74D             89                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD
                        90                     NACH_REGISTER_FÜLLEN1:
0049 B2B7               91                     CPL P3.7
004B CA                 92                     xch A,R2                ; dopppelte Vertauschung notwendig!!
004C 10D705             93                     JBC C,SUM_LOOP_3
                        94
                        95                     JoaNhBinZuUnkreativ1:
004F CA                 96                             xch A,R2                ;tausche A mit R2
0050 4F                 97                             ORL A, R7               ;schreibe wert in TicTacToeFeld mit |-Verknüpfung
0051 FF                 98                             MOV R7, A               ;speichere Wert in Register zwischen
0052 80CF               99                             JMP MAIN_LOOP
                       100                             ;RET                    ;RET, wenn Interrupt verwendet wird
                       101
                       102             SUM_LOOP_3:
0054 CA                103                     xch A,R2
0055 0A                104                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
0056 23                105                     RL A            ;rotiere akku um 3 Stellen je übertrag
0057 23                106                     RL A
0058 23                107                     RL A
0059 CA                108                     xch A,R2                ;tausche A(kku) mit R2
005A 70F8              109                     JNZ SUM_LOOP_3          ; springe zurück zur Schleife, wenn r2 != 0
005C 60F1              110                     JZ JoaNhBinZuUnkreativ1
                       111
                       112             ;-----------------------------------------------------------------------
                       113             ; 3 < x < 6
                       114             LESS_THAN_6:
005E FA                115                     MOV R2, A
005F 20B740            116                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD2
0062 30B739            117                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD2
                       118                     NACH_REGISTER_FÜLLEN2:
0065 B2B7              119                     CPL P3.7
0067 CA                120                     xch A,R2
0068 10D705            121                     JBC C,SUM_LOOP_6
                       122
                       123                     JoaNhBinZuUnkreativ2:
006B CA                124                             xch A,R2
006C 4E                125                             ORL A, R6
006D FE                126                             MOV R6, A
006E 80B3              127                             JMP MAIN_LOOP
                       128                             ;RET            RET, wenn Interrupt verwendet wird
                       129
                       130             SUM_LOOP_6:
0070 CA                131                     xch A,R2
0071 0A                132                     INC R2
0072 23                133                     RL A
0073 23                134                     RL A
0074 23                135                     RL A
0075 CA                136                     xch A,R2
0076 70F8              137                     JNZ SUM_LOOP_6
0078 60F1              138                     JZ JoaNhBinZuUnkreativ2
                       139
                       140
                       141
                       142             ;-----------------------------------------------------------------------
                       143             ; 6< x < 9
                       144             LESS_THAN_9:
007A FA                145                     MOV R2, A
007B 20B72C            146                     JB P3.7, WRITE_PLAYER_2_INTO_FIELD3
007E 30B725            147                     JNB P3.7, WRITE_PLAYER_1_INTO_FIELD3
                       148                     NACH_REGISTER_FÜLLEN3:
0081 B2B7              149                     CPL P3.7
0083 CA                150                     xch A,R2
0084 10D705            151                     JBC C,SUM_LOOP_9
                       152
                       153                     JoaNhBinZuUnkreativ3:
0087 CA                154                             xch A,R2
0088 4D                155                             ORL A, R5
0089 FD                156                             MOV R5, A
008A 8097              157                             JMP MAIN_LOOP
                       158                             ;RET
                       159
                       160             SUM_LOOP_9:
008C CA                161                     xch A,R2
008D 0A                162                     INC R2
008E 23                163                     RL A
008F 23                164                     RL A
0090 23                165                     RL A
0091 CA                166                     xch A,R2
0092 70F8              167                     JNZ SUM_LOOP_9
0094 60F1              168                     JZ JoaNhBinZuUnkreativ3
                       169
                       170     ; Das hier ist bisschen unschön, aber es muss zu der jeweiligen Adresse im 'IF' zurückgesprungen werd
                       171     WRITE_PLAYER_1_INTO_FIELD:
0096 7403              172             MOV A, #00000011b
0098 80AF              173             JMP NACH_REGISTER_FÜLLEN1
                       174     WRITE_PLAYER_2_INTO_FIELD:
009A 7401              175             MOV A, #00000001b
009C 80AB              176             JMP NACH_REGISTER_FÜLLEN1
                       177
                       178     WRITE_PLAYER_1_INTO_FIELD2:
009E 7403              179             MOV A, #00000011b
00A0 80C3              180             JMP NACH_REGISTER_FÜLLEN2
                       181     WRITE_PLAYER_2_INTO_FIELD2:
00A2 7401              182             MOV A, #00000001b
00A4 80BF              183             JMP NACH_REGISTER_FÜLLEN2
                       184
                       185     WRITE_PLAYER_1_INTO_FIELD3:
00A6 7403              186             MOV A, #00000011b
00A8 80D7              187             JMP NACH_REGISTER_FÜLLEN3
                       188     WRITE_PLAYER_2_INTO_FIELD3:
00AA 7401              189             MOV A, #00000001b
00AC 80D3              190             JMP NACH_REGISTER_FÜLLEN3
                       191
                       192
                       193
                       194     DISPLAY_BOARD:
                       195             ;-----------------------------------------------------------------------
                       196                 ; Zeige R7,R6,R5 nacheinander gemultiplext an
                       197                 ; R7, R6, R5 spiegeln das Feld wider, x die Eingabe aus R0 von Funktion ON_INPUT (Wird au
                       198             ;-----------------------------------------------------------------------
                       199
                       200
                       201
00AE 759000            202             MOV P1, #00000000b ;setze p1 standardgemäß auf 0
                       203             ;display0:
00B1 8FA0              204                     MOV P2, R7
00B3 D290              205                     setb P1.0
00B5 109000            206                     JBC P1.0,display1
                       207             display1:
                       208                     ;MOV P2, R7
00B8 D291              209                     setb P1.1
00BA 109100            210                     JBC P1.1,display2
                       211             display2:
                       212                     ;MOV P2, #00000000b
00BD D292              213                     setb P1.2
00BF 109200            214                     JBC P1.2,display3
00C2 8EA0              215             display3: MOV P2, R6
00C4 D293              216                     setb P1.3
00C6 109300            217                     JBC P1.3,display4
                       218             display4:
00C9 D294              219                     setb P1.4
00CB 109400            220                     JBC P1.4,display5
                       221             display5:
                       222                     ;MOV P2, #00000000b
00CE D295              223                     setb P1.5
00D0 109500            224                     JBC P1.5,display6
                       225             display6:
00D3 8DA0              226                     MOV P2, R5
00D5 D296              227                     setb P1.6
00D7 109600            228                     JBC P1.6,display7
                       229             display7:
00DA D297              230                     setb P1.7
                       231
                       232
00DC 020023            233                     LJMP main_loop
                       234
                       235
                       236
                       237
                       238     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H  NOT USED
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DISPLAY1 . . . . . . . . . . . . . .  C  ADDR  00B8H
DISPLAY2 . . . . . . . . . . . . . .  C  ADDR  00BDH
DISPLAY3 . . . . . . . . . . . . . .  C  ADDR  00C2H
DISPLAY4 . . . . . . . . . . . . . .  C  ADDR  00C9H
DISPLAY5 . . . . . . . . . . . . . .  C  ADDR  00CEH
DISPLAY6 . . . . . . . . . . . . . .  C  ADDR  00D3H
DISPLAY7 . . . . . . . . . . . . . .  C  ADDR  00DAH
DISPLAY_BOARD. . . . . . . . . . . .  C  ADDR  00AEH
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT_BOARD . . . . . . . . . . . . .  C  ADDR  0017H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
JOANHBINZUUNKREATIV1 . . . . . . . .  C  ADDR  004FH
JOANHBINZUUNKREATIV2 . . . . . . . .  C  ADDR  006BH
JOANHBINZUUNKREATIV3 . . . . . . . .  C  ADDR  0087H
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LESS_THAN_3. . . . . . . . . . . . .  C  ADDR  0042H
LESS_THAN_6. . . . . . . . . . . . .  C  ADDR  005EH
LESS_THAN_9. . . . . . . . . . . . .  C  ADDR  007AH
MAIN_LOOP. . . . . . . . . . . . . .  C  ADDR  0023H
NACH_REGISTER_FÜLLEN1. . . . . . . .  C  ADDR  0049H
NACH_REGISTER_FÜLLEN2. . . . . . . .  C  ADDR  0065H
NACH_REGISTER_FÜLLEN3. . . . . . . .  C  ADDR  0081H
ON_INPUT . . . . . . . . . . . . . .  C  ADDR  002BH
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
SUM_LOOP_3 . . . . . . . . . . . . .  C  ADDR  0054H
SUM_LOOP_6 . . . . . . . . . . . . .  C  ADDR  0070H
SUM_LOOP_9 . . . . . . . . . . . . .  C  ADDR  008CH
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED
WRITE_PLAYER_1_INTO_FIELD. . . . . .  C  ADDR  0096H
WRITE_PLAYER_1_INTO_FIELD2 . . . . .  C  ADDR  009EH
WRITE_PLAYER_1_INTO_FIELD3 . . . . .  C  ADDR  00A6H
WRITE_PLAYER_2_INTO_FIELD. . . . . .  C  ADDR  009AH
WRITE_PLAYER_2_INTO_FIELD2 . . . . .  C  ADDR  00A2H
WRITE_PLAYER_2_INTO_FIELD3 . . . . .  C  ADDR  00AAH