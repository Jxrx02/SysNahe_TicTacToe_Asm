tictactoe                                                                                                               PAGE 1
                         1     ;-------------------------------------------------
                         2     ;TicTacToe, 2 Spieler
                         3     ; Eingabe: Matrix-Keypad an P0 (P0.0-P0.3, für 9 Felder), Eingabe bestätigen P0.7 ; Wertebereich: [1-
                         4     ; Ausgabe: 8x8-LED-Matrix an P1, P2
                         5     ;
                         6     ; -------------------------------------------------
                         7
                         8
                         9     ;-----------------------------------------------------------------------
                        10     ; Voreingestellungen
                        11     ;-----------------------------------------------------------------------
                        12     ORG 0H   ; Startadresse des Programms
0000 759000             13     MOV P1, #00H    ; Konfiguriere Port 1 als Ausgangsport für LED-Matrix
0003 75A000             14     MOV P2, #00H    ; Konfiguriere Port 2 als Ausgangsport für LED-Matrix
                        15
                        16     ;Bits für Interrupt
0006 D2AF               17     SETB EA
                        18     ;SETB IE0       ; Setzte Bit IE1 für Interruptfreigabe 3.2
0008 D2A8               19     SETB EX0        ; Setzte Bit EX0 für Interruptfreigabe (Port 3.2)
000A D2B8               20     SETB PX0        ; Setzte Priorität für Interruptfreigabe (Port 3.2)
                        21
                        22
000C 120017             23     call INIT_BOARD
000F 12001D             24     call MAIN_LOOP
                        25     ;-----------------------------------------------------------------------
                        26     ;ISR
                        27     ;-----------------------------------------------------------------------
                        28     ORG 13H ; adresse von interrupt 3.2
0013 120025             29     call ON_INPUT
0016 32                 30     reti ; return from interupt; remove interrupt-bit
                        31
                        32
                        33
                        34     ;-----------------------------------------------------------------------
                        35     ; Logik
                        36     ;-----------------------------------------------------------------------
                        37
                        38
                        39
                        40     INIT_BOARD:
0017 7F00               41             mov r7, #00000000b      ;00 0 00 0 10
                        42                                     ;00 0 00 0 10           wenn x < 3 -> R7
                        43                                     ;00 0 00 0 00
0019 7E00               44             mov r6, #00000000b      ;11 0 10 0 00
                        45                                     ;11 0 10 0 00           wenn x < 6 -> R6
                        46                                     ;00 0 00 0 00
001B 7D00               47             mov r5, #00000000b      ;11 0 00 0 00
                        48                                     ;11 0 00 0 00           sonst R5
                        49
                        50
                        51
                        52     MAIN_LOOP:
                        53             ;-----------------------------------------------------------------------
                        54                 ; ON_INPUT: Wird P0.7 betätigt, so wird Port P0 (P0.0-P0.3) eingelesen -> liefert Dezimal
                        55             ;-----------------------------------------------------------------------
001D 208705             56             JB P0.7, ON_INPUT
                        57
0020 12007E             58             call DISPLAY_BOARD
0023 80F8               59             JMP MAIN_LOOP
                        60
                        61
                        62     ON_INPUT:
0025 E580               63             MOV a, P0
0027 540F               64             ANL a, #00FH ; bitweise &-Verknüpfung, um nur die letzten 4 Bits (P0.0-P0.3) auszuwerten
0029 F8                 65             MOV R0, a
                        66             ;-----------------------------------------------------------------------
                        67                 ; Mappe Feld auf 8x8 Matrix
                        68                 ; => R0 enthält den Wert des zu setztenden Feldes
                        69             ;-----------------------------------------------------------------------
                        70             ; x < 3
002A 9403               71             SUBB A, #03h; Idee: 8-3 >0; 5-3>0; 2-3 = -1 Setze Carry oder wenn akku leer, springe auf schl
002C 400E               72             JC LESS_THAN_3 ; x<3 -> schreibe in R7
002E 600C               73             JZ LESS_THAN_3
                        74
                        75             ; 3 < x < 6
0030 9403               76             SUBB A, #03h
0032 401E               77             JC LESS_THAN_6 ; x<6 -> schreibe in R6
0034 601C               78             JZ LESS_THAN_6
                        79             ; 6< x < 9
0036 9403               80             SUBB A, #03h
0038 402E               81             JC LESS_THAN_9 ; x<6 -> schreibe in R6
003A 602C               82             JZ LESS_THAN_9
                        83
                        84             ; x < 3
                        85             LESS_THAN_3:
003C FA                 86                     MOV R2, A; register für zähler der foor loop
                        87                     ; wenn Bit für S1 gesetzt ist, so schreibe #00000011b, ansonsten #00000001b
003D 7403               88                     MOV A, #00000011b
003F CA                 89                     xch A,R2                ; dopppelte Vertauschung notwendig!!
0040 10D705             90                     JBC C,SUM_LOOP_3
                        91
                        92                     JoaNhBinZuUnkreativ1:
0043 CA                 93                             xch A,R2                ;tausche A mit R2
0044 4F                 94                             ORL A, R7               ;schreibe wert in TicTacToeFeld mit |-Verknüpfung
0045 FF                 95                             MOV R7, A               ;speichere Wert in Register zwischen
0046 80D5               96                             JMP MAIN_LOOP
                        97                             ;RET                    ;RET, wenn Interrupt verwendet wird
                        98
                        99             SUM_LOOP_3:
0048 CA                100                     xch A,R2
0049 0A                101                     INC R2                  ; Inkrementiere den Zählerwert für die nächste Iteration
004A 23                102                     RL A            ;rotiere akku um 3 Stellen je übertrag
004B 23                103                     RL A
004C 23                104                     RL A
004D CA                105                     xch A,R2                ;tausche A(kku) mit R2
004E 70F8              106                     JNZ SUM_LOOP_3          ; springe zurück zur Schleife, wenn r2 != 0
0050 60F1              107                     JZ JoaNhBinZuUnkreativ1
                       108
                       109             ;-----------------------------------------------------------------------
                       110             ; 3 < x < 6
                       111             LESS_THAN_6:
0052 FA                112                     MOV R2, A
0053 7403              113                     MOV A, #00000011b
0055 CA                114                     xch A,R2
0056 10D705            115                     JBC C,SUM_LOOP_6
                       116
                       117                     JoaNhBinZuUnkreativ2:
0059 CA                118                             xch A,R2
005A 4E                119                             ORL A, R6
005B FE                120                             MOV R6, A
005C 80BF              121                             JMP MAIN_LOOP
                       122                             ;RET            RET, wenn Interrupt verwendet wird
                       123
                       124             SUM_LOOP_6:
005E CA                125                     xch A,R2
005F 0A                126                     INC R2
0060 23                127                     RL A
0061 23                128                     RL A
0062 23                129                     RL A
0063 CA                130                     xch A,R2
0064 70F8              131                     JNZ SUM_LOOP_6
0066 60F1              132                     JZ JoaNhBinZuUnkreativ2
                       133
                       134
                       135
                       136             ;-----------------------------------------------------------------------
                       137             ; 6< x < 9
                       138             LESS_THAN_9:
0068 FA                139                     MOV R2, A
0069 7403              140                     MOV A, #00000011b
006B CA                141                     xch A,R2
006C 10D705            142                     JBC C,SUM_LOOP_9
                       143
                       144                     JoaNhBinZuUnkreativ3:
006F CA                145                             xch A,R2
0070 4D                146                             ORL A, R5
0071 FD                147                             MOV R5, A
0072 80A9              148                             JMP MAIN_LOOP
                       149                             ;RET
                       150
                       151             SUM_LOOP_9:
0074 CA                152                     xch A,R2
0075 0A                153                     INC R2
0076 23                154                     RL A
0077 23                155                     RL A
0078 23                156                     RL A
0079 CA                157                     xch A,R2
007A 70F8              158                     JNZ SUM_LOOP_9
007C 60F1              159                     JZ JoaNhBinZuUnkreativ3
                       160
                       161
                       162
                       163
                       164
                       165     DISPLAY_BOARD:
                       166             ;-----------------------------------------------------------------------
                       167                 ; Zeige R7,R6,R5 nacheinander gemultiplext an
                       168                 ; R7, R6, R5 spiegeln das Feld wider, x die Eingabe aus R0 von Funktion ON_INPUT (Wird au
                       169             ;-----------------------------------------------------------------------
                       170
                       171
                       172
007E 759000            173             MOV P1, #00000000b ;setze p1 standardgemäß auf 0
                       174             ;display0:
0081 8FA0              175                     MOV P2, R7
0083 D290              176                     setb P1.0
0085 109000            177                     JBC P1.0,display1
                       178             display1:
                       179                     ;MOV P2, R7
0088 D291              180                     setb P1.1
008A 109100            181                     JBC P1.1,display2
                       182             display2:
                       183                     ;MOV P2, #00000000b
008D D292              184                     setb P1.2
008F 109200            185                     JBC P1.2,display3
0092 8EA0              186             display3: MOV P2, R6
0094 D293              187                     setb P1.3
0096 109300            188                     JBC P1.3,display4
                       189             display4:
0099 D294              190                     setb P1.4
009B 109400            191                     JBC P1.4,display5
                       192             display5:
                       193                     ;MOV P2, #00000000b
009E D295              194                     setb P1.5
00A0 109500            195                     JBC P1.5,display6
                       196             display6:
00A3 8DA0              197                     MOV P2, R5
00A5 D296              198                     setb P1.6
00A7 109600            199                     JBC P1.6,display7
                       200             display7:
00AA D297              201                     setb P1.7
                       202
                       203
00AC 111D              204                     call main_loop
                       205
                       206
                       207
                       208
                       209     END
ASSEMBLY COMPLETE, NO ERRORS FOUND, NO WARNINGS


SYMBOL TABLE:
??MCU_8051_IDE . . . . . . . . . . .  N  NUMB  8051H  NOT USED
??VERSION. . . . . . . . . . . . . .  N  NUMB  0149H  NOT USED
AC . . . . . . . . . . . . . . . . .  B  ADDR  00D6H  NOT USED
ACC. . . . . . . . . . . . . . . . .  D  ADDR  00E0H  NOT USED
ACSR . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
ADCF . . . . . . . . . . . . . . . .  D  ADDR  00F6H  NOT USED
ADCLK. . . . . . . . . . . . . . . .  D  ADDR  00F2H  NOT USED
ADCON. . . . . . . . . . . . . . . .  D  ADDR  00F3H  NOT USED
ADDH . . . . . . . . . . . . . . . .  D  ADDR  00F5H  NOT USED
ADDL . . . . . . . . . . . . . . . .  D  ADDR  00F4H  NOT USED
AUXR . . . . . . . . . . . . . . . .  D  ADDR  008EH  NOT USED
AUXR1. . . . . . . . . . . . . . . .  D  ADDR  00A2H  NOT USED
B. . . . . . . . . . . . . . . . . .  D  ADDR  00F0H  NOT USED
BDRCON . . . . . . . . . . . . . . .  D  ADDR  009BH  NOT USED
BDRCON_1 . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
BRL. . . . . . . . . . . . . . . . .  D  ADDR  009AH  NOT USED
CCAP0H . . . . . . . . . . . . . . .  D  ADDR  00FAH  NOT USED
CCAP0L . . . . . . . . . . . . . . .  D  ADDR  00EAH  NOT USED
CCAP1H . . . . . . . . . . . . . . .  D  ADDR  00FBH  NOT USED
CCAP1L . . . . . . . . . . . . . . .  D  ADDR  00EBH  NOT USED
CCAP2H . . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAP3H . . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAP4H . . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL2H. . . . . . . . . . . . . . .  D  ADDR  00FCH  NOT USED
CCAPL2L. . . . . . . . . . . . . . .  D  ADDR  00ECH  NOT USED
CCAPL3H. . . . . . . . . . . . . . .  D  ADDR  00FDH  NOT USED
CCAPL3L. . . . . . . . . . . . . . .  D  ADDR  00EDH  NOT USED
CCAPL4H. . . . . . . . . . . . . . .  D  ADDR  00FEH  NOT USED
CCAPL4L. . . . . . . . . . . . . . .  D  ADDR  00EEH  NOT USED
CCAPM0 . . . . . . . . . . . . . . .  D  ADDR  00DAH  NOT USED
CCAPM1 . . . . . . . . . . . . . . .  D  ADDR  00DBH  NOT USED
CCAPM2 . . . . . . . . . . . . . . .  D  ADDR  00DCH  NOT USED
CCAPM3 . . . . . . . . . . . . . . .  D  ADDR  00DDH  NOT USED
CCAPM4 . . . . . . . . . . . . . . .  D  ADDR  00DEH  NOT USED
CCF0 . . . . . . . . . . . . . . . .  B  ADDR  00D8H  NOT USED
CCF1 . . . . . . . . . . . . . . . .  B  ADDR  00D9H  NOT USED
CCF2 . . . . . . . . . . . . . . . .  B  ADDR  00DAH  NOT USED
CCF3 . . . . . . . . . . . . . . . .  B  ADDR  00DBH  NOT USED
CCF4 . . . . . . . . . . . . . . . .  B  ADDR  00DCH  NOT USED
CCON . . . . . . . . . . . . . . . .  D  ADDR  00D8H  NOT USED
CFINT. . . . . . . . . . . . . . . .  C  ADDR  0033H  NOT USED
CH . . . . . . . . . . . . . . . . .  D  ADDR  00F9H  NOT USED
CKCON. . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKCON0 . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CKRL . . . . . . . . . . . . . . . .  D  ADDR  0097H  NOT USED
CKSEL. . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
CL . . . . . . . . . . . . . . . . .  D  ADDR  00E9H  NOT USED
CLKREG . . . . . . . . . . . . . . .  D  ADDR  008FH  NOT USED
CMOD . . . . . . . . . . . . . . . .  D  ADDR  00D9H  NOT USED
CPRL2. . . . . . . . . . . . . . . .  B  ADDR  00C8H  NOT USED
CR . . . . . . . . . . . . . . . . .  B  ADDR  00DEH  NOT USED
CT2. . . . . . . . . . . . . . . . .  B  ADDR  00C9H  NOT USED
CY . . . . . . . . . . . . . . . . .  B  ADDR  00D7H  NOT USED
DISPLAY1 . . . . . . . . . . . . . .  C  ADDR  0088H
DISPLAY2 . . . . . . . . . . . . . .  C  ADDR  008DH
DISPLAY3 . . . . . . . . . . . . . .  C  ADDR  0092H
DISPLAY4 . . . . . . . . . . . . . .  C  ADDR  0099H
DISPLAY5 . . . . . . . . . . . . . .  C  ADDR  009EH
DISPLAY6 . . . . . . . . . . . . . .  C  ADDR  00A3H
DISPLAY7 . . . . . . . . . . . . . .  C  ADDR  00AAH
DISPLAY_BOARD. . . . . . . . . . . .  C  ADDR  007EH
DP0H . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DP0L . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
DP1H . . . . . . . . . . . . . . . .  D  ADDR  0085H  NOT USED
DP1L . . . . . . . . . . . . . . . .  D  ADDR  0084H  NOT USED
DPH. . . . . . . . . . . . . . . . .  D  ADDR  0083H  NOT USED
DPL. . . . . . . . . . . . . . . . .  D  ADDR  0082H  NOT USED
EA . . . . . . . . . . . . . . . . .  B  ADDR  00AFH
EC . . . . . . . . . . . . . . . . .  B  ADDR  00AEH  NOT USED
EECON. . . . . . . . . . . . . . . .  D  ADDR  0096H  NOT USED
ES . . . . . . . . . . . . . . . . .  B  ADDR  00ACH  NOT USED
ET0. . . . . . . . . . . . . . . . .  B  ADDR  00A9H  NOT USED
ET1. . . . . . . . . . . . . . . . .  B  ADDR  00ABH  NOT USED
ET2. . . . . . . . . . . . . . . . .  B  ADDR  00ADH  NOT USED
EX0. . . . . . . . . . . . . . . . .  B  ADDR  00A8H
EX1. . . . . . . . . . . . . . . . .  B  ADDR  00AAH  NOT USED
EXEN2. . . . . . . . . . . . . . . .  B  ADDR  00CBH  NOT USED
EXF2 . . . . . . . . . . . . . . . .  B  ADDR  00CEH  NOT USED
EXTI0. . . . . . . . . . . . . . . .  C  ADDR  0003H  NOT USED
EXTI1. . . . . . . . . . . . . . . .  C  ADDR  0013H  NOT USED
F0 . . . . . . . . . . . . . . . . .  B  ADDR  00D5H  NOT USED
FE . . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
IE . . . . . . . . . . . . . . . . .  D  ADDR  00A8H  NOT USED
IE0. . . . . . . . . . . . . . . . .  B  ADDR  0089H  NOT USED
IE1. . . . . . . . . . . . . . . . .  B  ADDR  008BH  NOT USED
INIT_BOARD . . . . . . . . . . . . .  C  ADDR  0017H
INT0 . . . . . . . . . . . . . . . .  B  ADDR  00B2H  NOT USED
INT1 . . . . . . . . . . . . . . . .  B  ADDR  00B3H  NOT USED
IP . . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPH. . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH0 . . . . . . . . . . . . . . . .  D  ADDR  00B7H  NOT USED
IPH1 . . . . . . . . . . . . . . . .  D  ADDR  00B3H  NOT USED
IPL0 . . . . . . . . . . . . . . . .  D  ADDR  00B8H  NOT USED
IPL1 . . . . . . . . . . . . . . . .  D  ADDR  00B2H  NOT USED
IT0. . . . . . . . . . . . . . . . .  B  ADDR  0088H  NOT USED
IT1. . . . . . . . . . . . . . . . .  B  ADDR  008AH  NOT USED
JOANHBINZUUNKREATIV1 . . . . . . . .  C  ADDR  0043H
JOANHBINZUUNKREATIV2 . . . . . . . .  C  ADDR  0059H
JOANHBINZUUNKREATIV3 . . . . . . . .  C  ADDR  006FH
KBE. . . . . . . . . . . . . . . . .  D  ADDR  009DH  NOT USED
KBF. . . . . . . . . . . . . . . . .  D  ADDR  009EH  NOT USED
KBLS . . . . . . . . . . . . . . . .  D  ADDR  009CH  NOT USED
LESS_THAN_3. . . . . . . . . . . . .  C  ADDR  003CH
LESS_THAN_6. . . . . . . . . . . . .  C  ADDR  0052H
LESS_THAN_9. . . . . . . . . . . . .  C  ADDR  0068H
MAIN_LOOP. . . . . . . . . . . . . .  C  ADDR  001DH
ON_INPUT . . . . . . . . . . . . . .  C  ADDR  0025H
OSCCON . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
OV . . . . . . . . . . . . . . . . .  B  ADDR  00D2H  NOT USED
P. . . . . . . . . . . . . . . . . .  B  ADDR  00D0H  NOT USED
P0 . . . . . . . . . . . . . . . . .  D  ADDR  0080H
P1 . . . . . . . . . . . . . . . . .  D  ADDR  0090H
P1M1 . . . . . . . . . . . . . . . .  D  ADDR  00D4H  NOT USED
P1M2 . . . . . . . . . . . . . . . .  D  ADDR  00E2H  NOT USED
P2 . . . . . . . . . . . . . . . . .  D  ADDR  00A0H
P3 . . . . . . . . . . . . . . . . .  D  ADDR  00B0H  NOT USED
P3M1 . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
P3M2 . . . . . . . . . . . . . . . .  D  ADDR  00E3H  NOT USED
P4 . . . . . . . . . . . . . . . . .  D  ADDR  00C0H  NOT USED
P4M1 . . . . . . . . . . . . . . . .  D  ADDR  00D6H  NOT USED
P4M2 . . . . . . . . . . . . . . . .  D  ADDR  00E4H  NOT USED
P5 . . . . . . . . . . . . . . . . .  D  ADDR  00E8H  NOT USED
PC . . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PCON . . . . . . . . . . . . . . . .  D  ADDR  0087H  NOT USED
PPCL . . . . . . . . . . . . . . . .  B  ADDR  00BEH  NOT USED
PS . . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSL. . . . . . . . . . . . . . . . .  B  ADDR  00BCH  NOT USED
PSW. . . . . . . . . . . . . . . . .  D  ADDR  00D0H  NOT USED
PT0. . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT0L . . . . . . . . . . . . . . . .  B  ADDR  00B9H  NOT USED
PT1. . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT1L . . . . . . . . . . . . . . . .  B  ADDR  00BBH  NOT USED
PT2. . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PT2L . . . . . . . . . . . . . . . .  B  ADDR  00BDH  NOT USED
PX0. . . . . . . . . . . . . . . . .  B  ADDR  00B8H
PX0L . . . . . . . . . . . . . . . .  B  ADDR  00B8H  NOT USED
PX1. . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
PX1L . . . . . . . . . . . . . . . .  B  ADDR  00BAH  NOT USED
RB8. . . . . . . . . . . . . . . . .  B  ADDR  009AH  NOT USED
RCAP2H . . . . . . . . . . . . . . .  D  ADDR  00CBH  NOT USED
RCAP2L . . . . . . . . . . . . . . .  D  ADDR  00CAH  NOT USED
RCLK . . . . . . . . . . . . . . . .  B  ADDR  00CDH  NOT USED
RD . . . . . . . . . . . . . . . . .  B  ADDR  00B7H  NOT USED
REN. . . . . . . . . . . . . . . . .  B  ADDR  009CH  NOT USED
RESET. . . . . . . . . . . . . . . .  C  ADDR  0000H  NOT USED
RI . . . . . . . . . . . . . . . . .  B  ADDR  0098H  NOT USED
RS0. . . . . . . . . . . . . . . . .  B  ADDR  00D3H  NOT USED
RS1. . . . . . . . . . . . . . . . .  B  ADDR  00D4H  NOT USED
RXD. . . . . . . . . . . . . . . . .  B  ADDR  00B0H  NOT USED
SADDR. . . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_0. . . . . . . . . . . . . . .  D  ADDR  00A9H  NOT USED
SADDR_1. . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SADEN. . . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_0. . . . . . . . . . . . . . .  D  ADDR  00B9H  NOT USED
SADEN_1. . . . . . . . . . . . . . .  D  ADDR  00BAH  NOT USED
SBUF . . . . . . . . . . . . . . . .  D  ADDR  0099H  NOT USED
SCON . . . . . . . . . . . . . . . .  D  ADDR  0098H  NOT USED
SINT . . . . . . . . . . . . . . . .  C  ADDR  0023H  NOT USED
SM0. . . . . . . . . . . . . . . . .  B  ADDR  009FH  NOT USED
SM1. . . . . . . . . . . . . . . . .  B  ADDR  009EH  NOT USED
SM2. . . . . . . . . . . . . . . . .  B  ADDR  009DH  NOT USED
SP . . . . . . . . . . . . . . . . .  D  ADDR  0081H  NOT USED
SPCON. . . . . . . . . . . . . . . .  D  ADDR  00C3H  NOT USED
SPCR . . . . . . . . . . . . . . . .  D  ADDR  00D5H  NOT USED
SPDAT. . . . . . . . . . . . . . . .  D  ADDR  00C5H  NOT USED
SPDR . . . . . . . . . . . . . . . .  D  ADDR  0086H  NOT USED
SPSR . . . . . . . . . . . . . . . .  D  ADDR  00AAH  NOT USED
SPSTA. . . . . . . . . . . . . . . .  D  ADDR  00C4H  NOT USED
SUM_LOOP_3 . . . . . . . . . . . . .  C  ADDR  0048H
SUM_LOOP_6 . . . . . . . . . . . . .  C  ADDR  005EH
SUM_LOOP_9 . . . . . . . . . . . . .  C  ADDR  0074H
T0 . . . . . . . . . . . . . . . . .  B  ADDR  00B4H  NOT USED
T1 . . . . . . . . . . . . . . . . .  B  ADDR  00B5H  NOT USED
T2CON. . . . . . . . . . . . . . . .  D  ADDR  00C8H  NOT USED
T2MOD. . . . . . . . . . . . . . . .  D  ADDR  00C9H  NOT USED
TB8. . . . . . . . . . . . . . . . .  B  ADDR  009BH  NOT USED
TCLK . . . . . . . . . . . . . . . .  B  ADDR  00CCH  NOT USED
TCON . . . . . . . . . . . . . . . .  D  ADDR  0088H  NOT USED
TF0. . . . . . . . . . . . . . . . .  B  ADDR  008DH  NOT USED
TF1. . . . . . . . . . . . . . . . .  B  ADDR  008FH  NOT USED
TF2. . . . . . . . . . . . . . . . .  B  ADDR  00CFH  NOT USED
TH0. . . . . . . . . . . . . . . . .  D  ADDR  008CH  NOT USED
TH1. . . . . . . . . . . . . . . . .  D  ADDR  008DH  NOT USED
TH2. . . . . . . . . . . . . . . . .  D  ADDR  00CDH  NOT USED
TI . . . . . . . . . . . . . . . . .  B  ADDR  0099H  NOT USED
TIMER0 . . . . . . . . . . . . . . .  C  ADDR  000BH  NOT USED
TIMER1 . . . . . . . . . . . . . . .  C  ADDR  001BH  NOT USED
TIMER2 . . . . . . . . . . . . . . .  C  ADDR  002BH  NOT USED
TL0. . . . . . . . . . . . . . . . .  D  ADDR  008AH  NOT USED
TL1. . . . . . . . . . . . . . . . .  D  ADDR  008BH  NOT USED
TL2. . . . . . . . . . . . . . . . .  D  ADDR  00CCH  NOT USED
TMOD . . . . . . . . . . . . . . . .  D  ADDR  0089H  NOT USED
TR0. . . . . . . . . . . . . . . . .  B  ADDR  008CH  NOT USED
TR1. . . . . . . . . . . . . . . . .  B  ADDR  008EH  NOT USED
TR2. . . . . . . . . . . . . . . . .  B  ADDR  00CAH  NOT USED
TXD. . . . . . . . . . . . . . . . .  B  ADDR  00B1H  NOT USED
WDTCON . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTPRG . . . . . . . . . . . . . . .  D  ADDR  00A7H  NOT USED
WDTRST . . . . . . . . . . . . . . .  D  ADDR  00A6H  NOT USED
WR . . . . . . . . . . . . . . . . .  B  ADDR  00B6H  NOT USED